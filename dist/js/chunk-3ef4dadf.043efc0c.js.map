{"version":3,"sources":["webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./src/views/company/CompanyInfo.vue?0088","webpack:///src/views/company/CompanyInfo.vue","webpack:///./src/views/company/CompanyInfo.vue?e99f","webpack:///./src/views/company/CompanyInfo.vue","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./src/api/dict.js","webpack:///./src/api/company.js"],"names":["global","DOMIterables","DOMTokenListPrototype","forEach","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","prototype","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","this","arguments","length","undefined","render","_vm","_h","$createElement","_c","_self","ref","attrs","rules","form","items","save","staticRenderFns","component","fails","METHOD_NAME","argument","method","call","type_query","data","request","url","create","update","del","ids","params","dict_query","query","companyInfo"],"mappings":"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","file":"js/chunk-3ef4dadf.043efc0c.js","sourcesContent":["var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('r-form',{ref:\"myForm\",attrs:{\"rules\":_vm.rules,\"form\":_vm.form,\"items\":_vm.items,\"save\":_vm.save}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\n    </div>\n</template>\n\n<script>\n    import {update} from \"@/api/company\";\n    import RForm from \"@/components/RForm\";\n    import {companyInfo} from \"@/api/company\";\n    import {dict_query} from \"@/api/dict\";\n\n    export default {\n        name: \"CompanyInfo\",\n        components: {RForm},\n        data() {\n            return {\n                form: {\n                    id: '',\n                    name: '',\n                    contact: '',\n                    telephone: '',\n                    email: '',\n                    addr: '',\n                    url: '',\n                    size: '',\n                    type: '',\n                    logo: '',\n                    description: '',\n                },\n                rules: {\n                    name: [{required: true, message: '必填项不能为空'}]\n                },\n                items: [\n                    {type: 'text', label: '名称', prop: 'name', name: 'name', placeholder: '请输入名称'},\n                    {type: 'text', label: '联系人', prop: 'contact', name: 'contact', placeholder: '请选择联系人', options: []},\n                    {type: 'text', label: '联系电话', prop: 'telephone', name: 'telephone', placeholder: '请输入联系电话'},\n                    {type: 'text', label: '邮箱', prop: 'email', name: 'email', placeholder: '请输入邮箱'},\n                    {type: 'text', label: '地址', prop: 'addr', name: 'addr', placeholder: '请输入地址'},\n                    {type: 'text', label: '外链', prop: 'url', name: 'url', placeholder: '请输入外链'},\n                    {type: 'text', label: '网址', prop: 'url', name: 'url', placeholder: '请输入网址'},\n                    {type: 'select', label: '规模', prop: 'size', name: 'size', placeholder: '请输入规模', options: []},\n                    {type: 'select', label: '公司类型', prop: 'type', name: 'type', placeholder: '请选择公司类型', options: []},\n                    {type: 'file', label: 'Logo', prop: 'logo', name: 'logo', placeholder: 'Logo'},\n                    {type: 'area', label: '公司描述', prop: 'description', name: 'description', placeholder: '请录入内容'},\n                ]\n            }\n        },\n        mounted() {\n            this.getInfo();\n            this.getDictList1(4);\n            this.getDictList2(5);\n        },\n        methods: {\n            getDictList1(typeId) {\n                dict_query({typeId: typeId}).then(res => {\n                    let arr = [];\n                    res.data.forEach(item => {\n                        let p = {value: item.dictKey, label: item.dictVal};\n                        arr.push(p);\n                    });\n                    this.items.forEach(item => {\n                        if (item.type == 'select' && item.name == 'type') {\n                            item.options = arr;\n                        }\n                    })\n                })\n            },\n            getDictList2(typeId) {\n                dict_query({typeId: typeId}).then(res => {\n                    let arr = [];\n                    res.data.forEach(item => {\n                        let p = {value: item.dictKey, label: item.dictVal};\n                        arr.push(p);\n                    });\n                    this.items.forEach(item => {\n                        if (item.type == 'select' && item.name == 'size') {\n                            item.options = arr;\n                        }\n                    })\n                })\n            },\n            getInfo() {\n                companyInfo().then(res => {\n                    this.form = res.data;\n                    console.log(this.form)\n                })\n            },\n            save() {\n                let flag = this.$refs['myForm'].validateForm();\n                if (flag) {\n                    let param = this.form;\n                    if (this.form.single) {\n                        param.single = 'Y';\n                    } else {\n                        param.single = 'N';\n                    }\n                    update(param).then(res => {\n                        this.$message.success(res.msg);\n                        this.param.close();\n                        this.param.callback();\n                    })\n                }\n            }\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CompanyInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CompanyInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CompanyInfo.vue?vue&type=template&id=0f4d31d1&scoped=true&\"\nimport script from \"./CompanyInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./CompanyInfo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0f4d31d1\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","import request from '@/utils/request';\n\nexport function type_query(data) {\n    return request({\n        url: 'type/query',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function create(data) {\n    return request({\n        url: 'dict/create',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function update(data) {\n    return request({\n        url: 'dict/update',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function del(ids) {\n    return request({\n        url: 'dict/delete',\n        method: 'post',\n        params: {\"ids\": ids}\n    })\n}\n\nexport function detail(id) {\n    return request({\n        url: 'dict/detail',\n        method: 'post',\n        params: {\"id\": id}\n    })\n}\n\nexport function dict_query(data) {\n    return request({\n        url: 'dict/query',\n        method: 'post',\n        data: data\n    })\n}","import request from '@/utils/request';\n\nexport function create(data) {\n    return request({\n        url: 'company/create',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function update(data) {\n    return request({\n        url: 'company/update',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function del(ids) {\n    return request({\n        url: 'company/delete',\n        method: 'post',\n        params: {\"ids\": ids}\n    })\n}\n\nexport function detail(id) {\n    return request({\n        url: 'company/detail',\n        method: 'post',\n        params: {\"id\": id}\n    })\n}\n\nexport function query(data) {\n    return request({\n        url: 'company/query',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function companyInfo() {\n    return request({\n        url: 'company/info',\n        method: 'post'\n    })\n}"],"sourceRoot":""}