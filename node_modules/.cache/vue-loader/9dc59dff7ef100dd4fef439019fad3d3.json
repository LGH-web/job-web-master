{"remainingRequest":"G:\\IdeaFile\\job-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\IdeaFile\\job-web-master\\src\\views\\student\\StudentInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\IdeaFile\\job-web-master\\src\\views\\student\\StudentInfo.vue","mtime":1639545989000},{"path":"G:\\IdeaFile\\job-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666580404783},{"path":"G:\\IdeaFile\\job-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1666580385663},{"path":"G:\\IdeaFile\\job-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666580404783},{"path":"G:\\IdeaFile\\job-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1666580381795}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSRm9ybSBmcm9tICJAL2NvbXBvbmVudHMvUkZvcm0iOwppbXBvcnQge3N0dWRlbnRJbmZvLCB1cGRhdGV9IGZyb20gJ0AvYXBpL3N0dWRlbnQnCmltcG9ydCB7ZGljdF9xdWVyeX0gZnJvbSAiQC9hcGkvZGljdCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiU3R1ZGVudEluZm8iLAogICAgY29tcG9uZW50czoge1JGb3JtfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZm9ybTogewogICAgICAgICAgICAgICAgaWQ6ICcnLAogICAgICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgICAgICBiaXJ0aGRheTogJycsCiAgICAgICAgICAgICAgICBjb2xsZWdlOiAnJywKICAgICAgICAgICAgICAgIGVkdWNhdGlvbjogJycsCiAgICAgICAgICAgICAgICBwaG9uZTogJycsCiAgICAgICAgICAgICAgICBzZXg6ICcnLAogICAgICAgICAgICAgICAgcGhvdG86ICcnLAogICAgICAgICAgICAgICAgZ3JhZHVhdGVEYXRlOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICBydWxlczogewogICAgICAgICAgICAgICAgbmFtZTogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+W/heWhq+mhueS4jeiDveS4uuepuid9XQogICAgICAgICAgICB9LAogICAgICAgICAgICBpdGVtczogWwogICAgICAgICAgICAgICAge3R5cGU6ICd0ZXh0JywgbGFiZWw6ICflp5PlkI0nLCBwcm9wOiAnbmFtZScsIG5hbWU6ICduYW1lJywgcGxhY2Vob2xkZXI6ICfor7fovpPlhaXlkI3np7AnfSwKICAgICAgICAgICAgICAgIHt0eXBlOiAnZGF0ZScsIGxhYmVsOiAn5Ye655Sf5pel5pyfJywgcHJvcDogJ2JpcnRoZGF5JywgbmFtZTogJ2JpcnRoZGF5JywgcGxhY2Vob2xkZXI6ICflh7rnlJ/ml6XmnJ8nfSwKICAgICAgICAgICAgICAgIHt0eXBlOiAndGV4dCcsIGxhYmVsOiAn5q+V5Lia6Zmi5qChJywgcHJvcDogJ2NvbGxlZ2UnLCBuYW1lOiAnY29sbGVnZScsIHBsYWNlaG9sZGVyOiAn5q+V5Lia6Zmi5qChJ30sCiAgICAgICAgICAgICAgICB7dHlwZTogJ3NlbGVjdCcsIGxhYmVsOiAn5a2m5Y6GJywgcHJvcDogJ2VkdWNhdGlvbicsIG5hbWU6ICdlZHVjYXRpb24nLCBwbGFjZWhvbGRlcjogJ+WtpuWOhicsIG9wdGlvbnM6IFtdfSwKICAgICAgICAgICAgICAgIHt0eXBlOiAndGV4dCcsIGxhYmVsOiAn55S16K+dJywgcHJvcDogJ3Bob25lJywgbmFtZTogJ3Bob25lJywgcGxhY2Vob2xkZXI6ICfnlLXor50nfSwKICAgICAgICAgICAgICAgIHt0eXBlOiAnc2VsZWN0JywgbGFiZWw6ICfmgKfliKsnLCBwcm9wOiAnc2V4JywgbmFtZTogJ3NleCcsIHBsYWNlaG9sZGVyOiAn5oCn5YirJywgb3B0aW9uczogW119LAogICAgICAgICAgICAgICAge3R5cGU6ICdmaWxlJywgbGFiZWw6ICfnhafniYcnLCBwcm9wOiAncGhvdG8nLCBuYW1lOiAncGhvdG8nLCBwbGFjZWhvbGRlcjogJ+eFp+eJhyd9LAogICAgICAgICAgICAgICAge3R5cGU6ICdkYXRlJywgbGFiZWw6ICfmr5XkuJrml7bpl7QnLCBwcm9wOiAnZ3JhZHVhdGVEYXRlJywgbmFtZTogJ2dyYWR1YXRlRGF0ZScsIHBsYWNlaG9sZGVyOiAn5q+V5Lia5pe26Ze0J30sCiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmdldERpY3RMaXN0MSgyKTsKICAgICAgICB0aGlzLmdldERpY3RMaXN0MigxKTsKICAgICAgICB0aGlzLmdldEluZm8oKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0RGljdExpc3QxKHR5cGVJZCkgewogICAgICAgICAgICBkaWN0X3F1ZXJ5KHt0eXBlSWQ6IHR5cGVJZH0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB7dmFsdWU6IGl0ZW0uZGljdEtleSwgbGFiZWw6IGl0ZW0uZGljdFZhbH07CiAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2gocCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS50eXBlID09ICdzZWxlY3QnICYmIGl0ZW0ubmFtZSA9PSAnZWR1Y2F0aW9uJykgewogICAgICAgICAgICAgICAgICAgICAgICBpdGVtLm9wdGlvbnMgPSBhcnI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGdldERpY3RMaXN0Mih0eXBlSWQpIHsKICAgICAgICAgICAgZGljdF9xdWVyeSh7dHlwZUlkOiB0eXBlSWR9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICBsZXQgYXJyID0gW107CiAgICAgICAgICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgICAgIGxldCBwID0ge3ZhbHVlOiBpdGVtLmRpY3RLZXksIGxhYmVsOiBpdGVtLmRpY3RWYWx9OwogICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHApOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PSAnc2VsZWN0JyAmJiBpdGVtLm5hbWUgPT0gJ3NleCcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcHRpb25zID0gYXJyOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBnZXRJbmZvKCkgewogICAgICAgICAgICBzdHVkZW50SW5mbygpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZm9ybSA9IHJlcy5kYXRhOwogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgc2F2ZSgpIHsKICAgICAgICAgICAgbGV0IGZsYWcgPSB0aGlzLiRyZWZzWydteUZvcm0nXS52YWxpZGF0ZUZvcm0oKTsKICAgICAgICAgICAgaWYgKGZsYWcpIHsKICAgICAgICAgICAgICAgIHVwZGF0ZSh0aGlzLmZvcm0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbS5jbG9zZSgpOwogICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW0uY2FsbGJhY2soKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentInfo.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\n    <div>\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\n    </div>\n</template>\n\n<script>\n    import RForm from \"@/components/RForm\";\n    import {studentInfo, update} from '@/api/student'\n    import {dict_query} from \"@/api/dict\";\n\n    export default {\n        name: \"StudentInfo\",\n        components: {RForm},\n        data() {\n            return {\n                form: {\n                    id: '',\n                    name: '',\n                    birthday: '',\n                    college: '',\n                    education: '',\n                    phone: '',\n                    sex: '',\n                    photo: '',\n                    graduateDate: ''\n                },\n                rules: {\n                    name: [{required: true, message: '必填项不能为空'}]\n                },\n                items: [\n                    {type: 'text', label: '姓名', prop: 'name', name: 'name', placeholder: '请输入名称'},\n                    {type: 'date', label: '出生日期', prop: 'birthday', name: 'birthday', placeholder: '出生日期'},\n                    {type: 'text', label: '毕业院校', prop: 'college', name: 'college', placeholder: '毕业院校'},\n                    {type: 'select', label: '学历', prop: 'education', name: 'education', placeholder: '学历', options: []},\n                    {type: 'text', label: '电话', prop: 'phone', name: 'phone', placeholder: '电话'},\n                    {type: 'select', label: '性别', prop: 'sex', name: 'sex', placeholder: '性别', options: []},\n                    {type: 'file', label: '照片', prop: 'photo', name: 'photo', placeholder: '照片'},\n                    {type: 'date', label: '毕业时间', prop: 'graduateDate', name: 'graduateDate', placeholder: '毕业时间'},\n                ]\n            }\n        },\n        mounted() {\n            this.getDictList1(2);\n            this.getDictList2(1);\n            this.getInfo();\n        },\n        methods: {\n            getDictList1(typeId) {\n                dict_query({typeId: typeId}).then(res => {\n                    let arr = [];\n                    res.data.forEach(item => {\n                        let p = {value: item.dictKey, label: item.dictVal};\n                        arr.push(p);\n                    });\n                    this.items.forEach(item => {\n                        if (item.type == 'select' && item.name == 'education') {\n                            item.options = arr;\n                        }\n                    })\n                })\n            },\n            getDictList2(typeId) {\n                dict_query({typeId: typeId}).then(res => {\n                    let arr = [];\n                    res.data.forEach(item => {\n                        let p = {value: item.dictKey, label: item.dictVal};\n                        arr.push(p);\n                    });\n                    this.items.forEach(item => {\n                        if (item.type == 'select' && item.name == 'sex') {\n                            item.options = arr;\n                        }\n                    })\n                })\n            },\n            getInfo() {\n                studentInfo().then(res => {\n                    this.form = res.data;\n                })\n            },\n            save() {\n                let flag = this.$refs['myForm'].validateForm();\n                if (flag) {\n                    update(this.form).then(res => {\n                        this.$message.success(res.msg);\n                        this.param.close();\n                        this.param.callback();\n                    })\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}