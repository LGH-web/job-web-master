{"remainingRequest":"C:\\Users\\LGH\\Desktop\\job-web-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\LGH\\Desktop\\job-web-master\\src\\views\\dict\\Dict.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\LGH\\Desktop\\job-web-master\\src\\views\\dict\\Dict.vue","mtime":1639545989000},{"path":"C:\\Users\\LGH\\Desktop\\job-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666580404783},{"path":"C:\\Users\\LGH\\Desktop\\job-web-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1666580385663},{"path":"C:\\Users\\LGH\\Desktop\\job-web-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666580404783},{"path":"C:\\Users\\LGH\\Desktop\\job-web-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1666580381795}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7dHlwZV9xdWVyeSwgZGljdF9xdWVyeSwgZGVsfSBmcm9tICcuLi8uLi9hcGkvZGljdCc7CmltcG9ydCBSVGFibGUgZnJvbSAiLi4vLi4vY29tcG9uZW50cy9SVGFibGUiOwppbXBvcnQgQWRkIGZyb20gIi4vQWRkIjsKaW1wb3J0IEVkaXQgZnJvbSAiLi9FZGl0IjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJEaWN0IiwKICAgIGNvbXBvbmVudHM6IHtFZGl0LCBBZGQsIFJUYWJsZX0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHR5cGVUYWJsZURhdGE6IFtdLAogICAgICAgICAgICBhY3RpdmU6IDAsCiAgICAgICAgICAgIHNlbGVjdFR5cGVJZDogMCwKICAgICAgICAgICAgdHlwZVRhYmxlQ29sczogWwogICAgICAgICAgICAgICAge3Byb3A6ICduYW1lJywgbGFiZWw6ICfnsbvlnovlkI3np7AnfQogICAgICAgICAgICBdLAogICAgICAgICAgICBkaWN0VGFibGVEYXRhOiBbXSwKICAgICAgICAgICAgZGljdFRhYmxlQ29sczogWwogICAgICAgICAgICAgICAge3Byb3A6ICdkaWN0S2V5JywgbGFiZWw6ICflrZflhbjlkI3np7AnfSwKICAgICAgICAgICAgICAgIHtwcm9wOiAnZGljdFZhbCcsIGxhYmVsOiAn5a2X5YW45YC8J30sCiAgICAgICAgICAgICAgICB7cHJvcDogJ3N0YXR1cycsIGxhYmVsOiAn54q25oCBJywgc2xvdDogJ3Nsb3Rfc3RhdHVzJ30sCiAgICAgICAgICAgICAgICB7cHJvcDogJ3NvcnQnLCBsYWJlbDogJ+W6j+WPtycsIHdpZHRoOiAxMDB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBhZGQ6IHsKICAgICAgICAgICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgICAgICAgICAgY2xvc2U6IHRoaXMuY2xvc2UsCiAgICAgICAgICAgICAgICBjYWxsYmFjazogdGhpcy5yZWxvYWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZWRpdDogewogICAgICAgICAgICAgICAgdmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgICAgICBjbG9zZTogdGhpcy5jbG9zZSwKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiB0aGlzLnJlbG9hZCwKICAgICAgICAgICAgICAgIGZvcm06IG51bGwKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHR5cGVfcXVlcnkoe30pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgdGhpcy50eXBlVGFibGVEYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgIHRoaXMuc2VsZWN0VHlwZUlkID0gdGhpcy50eXBlVGFibGVEYXRhWzBdLmlkOwogICAgICAgIH0pCiAgICAgICAgdGhpcy5saXN0KHt0eXBlSWQ6IHRoaXMuc2VsZWN0VHlwZUlkfSkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgY3JlYXRlKCkgewogICAgICAgICAgICB0aGlzLmFkZC52aXNpYmxlID0gdHJ1ZTsKICAgICAgICB9LAogICAgICAgIHVwZGF0ZSgpIHsKICAgICAgICAgICAgbGV0IHNlbGVjdGlvbnMgPSB0aGlzLiRyZWZzWydtdXRpcGxlVGFibGUnXS5zZWxlY3Rpb247CiAgICAgICAgICAgIGlmIChzZWxlY3Rpb25zLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgICAgICAgICB0aGlzLmVkaXQudmlzaWJsZSA9IHRydWU7CiAgICAgICAgICAgICAgICB0aGlzLmVkaXQuZm9ybSA9IHNlbGVjdGlvbnNbMF07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuivt+mAieaLqeS4gOadoeaVsOaNrui/m+ihjOS/ruaUuSIpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICByZWxvYWQoKSB7CiAgICAgICAgICAgIHRoaXMubGlzdCh7dHlwZUlkOiB0aGlzLnNlbGVjdFR5cGVJZH0pCiAgICAgICAgfSwKICAgICAgICBsaXN0KHBhcmFtKSB7CiAgICAgICAgICAgIGRpY3RfcXVlcnkocGFyYW0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZGljdFRhYmxlRGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgY2xvc2UoKSB7CiAgICAgICAgICAgIHRoaXMuYWRkLnZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5lZGl0LnZpc2libGUgPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIGRlbCgpIHsKICAgICAgICAgICAgbGV0IHNlbGVjdGlvbnMgPSB0aGlzLiRyZWZzWydtdXRpcGxlVGFibGUnXS5zZWxlY3Rpb247CiAgICAgICAgICAgIGlmIChzZWxlY3Rpb25zLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIHRoaXMuJGNvbmZpcm0oIuehruWumuacieWIoOmZpOWQl++8nyIsICLliKDpmaTmj5DnpLoiKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgYXJyID0gc2VsZWN0aW9ucy5tYXAoaXRlbSA9PiBpdGVtLmlkKTsKICAgICAgICAgICAgICAgICAgICBsZXQgaWRzID0gYXJyLmpvaW4oJywnKTsKICAgICAgICAgICAgICAgICAgICBkZWwoaWRzKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWxvYWQoKTsKICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoIuivt+mAieaLqeimgeWIoOmZpOeahOaVsOaNriIpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBoYW5kbGVUeXBlKGluZGV4LCB0eXBlSWQpIHsKICAgICAgICAgICAgdGhpcy5hY3RpdmUgPSBpbmRleDsKICAgICAgICAgICAgdGhpcy5zZWxlY3RUeXBlSWQgPSB0eXBlSWQ7CiAgICAgICAgICAgIHRoaXMubGlzdCh7dHlwZUlkOiB0eXBlSWR9KQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["Dict.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dict.vue","sourceRoot":"src/views/dict","sourcesContent":["<template>\n    <div style=\"background: #f2f2f2\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"5\">\n                <el-card>\n                    <ul class=\"type\">\n                        <li @click=\"handleType(index,item.id)\" :class=\"active==index?'active':''\"\n                            v-for=\"(item,index) in typeTableData\" :key=\"index\">\n                            {{item.name}}\n                        </li>\n                    </ul>\n                </el-card>\n            </el-col>\n            <el-col :span=\"19\">\n                <el-card>\n                    <div class=\"btn-panel\">\n                        <el-button size=\"small\" type=\"primary\" icon=\"el-icon-plus\" @click=\"create\">新增</el-button>\n                        <el-button size=\"small\" type=\"primary\" icon=\"el-icon-edit\" @click=\"update\">修改</el-button>\n                        <el-button size=\"small\" type=\"danger\" icon=\"el-icon-delete\" @click=\"del\">删除</el-button>\n                    </div>\n                    <r-table ref=\"mutipleTable\" :table-data=\"dictTableData\" :table-cols=\"dictTableCols\">\n                        <template slot=\"slot_status\" slot-scope=\"scope\">\n                            <el-tag v-if=\"scope.data.status==0\" type=\"success\" size=\"mini\">正常</el-tag>\n                            <el-tag v-else type=\"danger\" size=\"mini\">停用</el-tag>\n                        </template>\n                    </r-table>\n                </el-card>\n                <Add v-if=\"add.visible\" :param=\"add\" :typeId=\"selectTypeId\"></Add>\n                <Edit v-if=\"edit.visible\" :param=\"edit\" :typeId=\"selectTypeId\"></Edit>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\n    import {type_query, dict_query, del} from '../../api/dict';\n    import RTable from \"../../components/RTable\";\n    import Add from \"./Add\";\n    import Edit from \"./Edit\";\n\n    export default {\n        name: \"Dict\",\n        components: {Edit, Add, RTable},\n        data() {\n            return {\n                typeTableData: [],\n                active: 0,\n                selectTypeId: 0,\n                typeTableCols: [\n                    {prop: 'name', label: '类型名称'}\n                ],\n                dictTableData: [],\n                dictTableCols: [\n                    {prop: 'dictKey', label: '字典名称'},\n                    {prop: 'dictVal', label: '字典值'},\n                    {prop: 'status', label: '状态', slot: 'slot_status'},\n                    {prop: 'sort', label: '序号', width: 100},\n                ],\n                add: {\n                    visible: false,\n                    close: this.close,\n                    callback: this.reload\n                },\n                edit: {\n                    visible: false,\n                    close: this.close,\n                    callback: this.reload,\n                    form: null\n                }\n            }\n        },\n        mounted() {\n            type_query({}).then(res => {\n                this.typeTableData = res.data;\n                this.selectTypeId = this.typeTableData[0].id;\n            })\n            this.list({typeId: this.selectTypeId})\n        },\n        methods: {\n            create() {\n                this.add.visible = true;\n            },\n            update() {\n                let selections = this.$refs['mutipleTable'].selection;\n                if (selections.length == 1) {\n                    this.edit.visible = true;\n                    this.edit.form = selections[0];\n                } else {\n                    this.$message.warning(\"请选择一条数据进行修改\");\n                }\n            },\n            reload() {\n                this.list({typeId: this.selectTypeId})\n            },\n            list(param) {\n                dict_query(param).then(res => {\n                    this.dictTableData = res.data;\n                })\n            },\n            close() {\n                this.add.visible = false;\n                this.edit.visible = false;\n            },\n            del() {\n                let selections = this.$refs['mutipleTable'].selection;\n                if (selections.length > 0) {\n                    this.$confirm(\"确定有删除吗？\", \"删除提示\").then(() => {\n                        let arr = selections.map(item => item.id);\n                        let ids = arr.join(',');\n                        del(ids).then(res => {\n                            this.$message.success(res.msg);\n                            this.reload();\n                        }).catch(() => {\n                        })\n                    })\n                } else {\n                    this.$message.warning(\"请选择要删除的数据\");\n                }\n            },\n            handleType(index, typeId) {\n                this.active = index;\n                this.selectTypeId = typeId;\n                this.list({typeId: typeId})\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .type {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n    .type li {\n        height: 40px;\n        padding-left: 20px;\n        line-height: 40px;\n        box-sizing: border-box;\n        cursor: pointer;\n        font-size: 14px;\n    }\n\n    .type .active {\n        background-color: #009399;\n        color: #ffffff;\n        border-radius: 10px;\n    }\n</style>"]}]}